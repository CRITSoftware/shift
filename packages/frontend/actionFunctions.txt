  activeEditorReplaceSelection: { text: string }
  activeEditorReplaceByString: { match: string, replace: string }
  activeEditorReplaceBody: { body: string }
  activeEditorAddHeader: { header: string, replace?: boolean }
  activeEditorAddQueryParameter: { name: string, value: string }
  activeEditorRemoveQueryParameter: { name: string }
  activeEditorUpdatePath: { path: string }
  activeEditorRemoveHeader: { headerName: string }
  replayRequestReplace: { text: string }
  replayReplaceByString: { match: string, replace: string } // DEPRECATED
  replayRequestReplaceSelection: { text: string } // DEPRECATED
  httpqlBarSetQuery: { text: string }
  searchBarSetQuery: { text: string }
  navigateToSidebarTab: { tabName: string }
  renameReplayTab: { newName: string, sessionId?: string }
  sendReplayTab: {} // No parameters
  addMatchAndReplace: { name: string, section: string, operation: string, matcherType: string | undefined, matcher: string | undefined, replacerType: string | undefined, replacer: string | undefined, query?: string, collectionId?: string }
  addScope: { name: string, allowlist: string[], denylist?: string[] }
  deleteScope: { name?: string, id?: string }
  updateScope: { name: string, allowList: string[], denyList: string[] }
  addFilter: { name: string, query: string, alias: string }
  updateFilter: { id: string, name: string, alias: string, query: string }
  deleteFilter: { name?: string, id?: string }
  showConfirmationModal: { title: string, message: string }
  createHostedFile: { name: string, content: string }
  displayTextToUser: { title: string, content: string }
  removeHostedFile: { id?: string, name?: string }
  createReplaySession: { requestSource: string, collectionId?: string, host: string, port: number, isTls: boolean, name?: string }
  runConvertWorkflow: { id: string, input: string }
  createAutomateSession: { requestSource: string, host: string, port: number, payloads?: any[], isTls?: boolean, strategy?: string, concurrency?: { delay: number, workers: number } }